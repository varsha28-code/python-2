Variation No.3(B.S on answers)
----------------------Square Root----------------------      
def floorSqrt(n):
    low=0
    high=n
    while(low<=high):
        mid=(low+high)//2
        if(mid*mid>n):
            high=mid-1
        else:
            low=mid+1
    return high
n=int(input())
print(floorSqrt(n))

----------------------Find nth root of m----------------
def nthRoot(n,m):
    low=1
    high=m
    while(low<=high):
        mid=(low+high)//2
        if(mid**n==m):
            return mid
        elif(mid**n>m):
            high=mid-1
        else:
            low=mid+1
    return -1
n=int(input())
m=int(input())
print(nthRoot(n,m))
            
------------------Smallest Divisor----------------------(Koko eating Bananas)
from math import ceil
def smallestDivisor(arr,k):
    low=1
    high=max(arr)
    while(low<=high):
        div=(low+high)//2
        Sum=0
        for nums in arr:
            Sum+=ceil(num/div)
        if(Sum>k):
            low=div+1
        else:
            high=div-1

-----------------Minimum days to make M bouquets-----------------------
def minDaysBloom(arr,k,m):
    if(m*k>len(arr)):
        return -1
    low=min(arr)
    high=max(arr)
    while(low<=high):
        day=(low+high)//2
        bloomed_flowers=0
        no_of_bouquets=0
        for num in arr:
            if(day>=num):
                bloomed_flowers+=1
                if(bloomed_flowers==k):
                    no_of_bouquets+=1   
                    bloomed_flowers=0     
            else:
                bloomed_flowers=0         #adjacency  
        if(no_of_bouquets>=m):
            high=day-1
        else:
            low=day+1
    return low
