def largestRectArea(heights):
    def findNSE(heights):
        stack=[]
        n=len(heights)
        ans=[0]*n
        for i in range(n-1,-1,-1):
            currEle=heights[i]
            while(len(stack)!=0 and heights[stack[-1]]>=currEle):
                +stack.pop()
            if(len(stack)==0):
                ans[i]=n
            else:
                ans[i]=stack[-1]
            stack.append(i)
        return ans
    def findPSE(heights):
        stack=[]
        n=len(heights)
        ans=[0]*n
        for i in range(0,n):
            currEle=heights[i]
            while(len(stack)!=0 and heights[stack[-1]]>=currEle):
                stack.pop()
            if(len(stack)==0):
                ans[i]=-1
            else:
                ans[i]=stack[-1]
            stack.append(i)
        return ans
    nse=findNSE(heights)
    pse=findPSE(heights)
    area=0
    maxArea=0
    n=len(heights)
    for i in range(0,n):
        area=heights[i]*(nse[i]-pse[i]-1)
        maxArea=max(maxArea,area)
    return maxArea
